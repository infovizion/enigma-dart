/// This file was autogenerated

library nx_tree_dimension_def;

import 'package:built_value/serializer.dart';
import 'package:built_value/built_value.dart';
import 'nx_inline_dimension_def.dart';
import 'nx_cell.dart';
import 'package:built_collection/built_collection.dart';
import 'other_total_spec_prop.dart';
import 'string_expr.dart';
import 'nx_calc_cond.dart';
part 'nx_tree_dimension_def.g.dart';

abstract class NxTreeDimensionDef
    implements Built<NxTreeDimensionDef, NxTreeDimensionDefBuilder> {
  static Serializer<NxTreeDimensionDef> get serializer =>
      _$nxTreeDimensionDefSerializer;

  /// Refers to a dimension stored in the library.
  /// Original name: qLibraryId
  @nullable
  @BuiltValueField(wireName: 'qLibraryId')
  String get libraryId;

  /// Refers to a dimension.
  /// Original name: qDef
  @nullable
  @BuiltValueField(wireName: 'qDef')
  NxInlineDimensionDef get def;

  /// List of measures.
  /// Original name: qValueExprs
  @nullable
  @BuiltValueField(wireName: 'qValueExprs')
  BuiltList<NxCell> get valueExprs;

  /// If set to true, no null values are returned.
  /// Original name: qNullSuppression
  @nullable
  @BuiltValueField(wireName: 'qNullSuppression')
  bool get nullSuppression;

  /// Sets the dimension limits. Each dimension of a hypercube is configured separately.
  /// Defines if some values (grouped as _Others_ ) should be grouped together in the visualization.
  /// For example in a pie chart all values lower than 200 could be grouped together.
  /// Original name: qOtherTotalSpec
  @nullable
  @BuiltValueField(wireName: 'qOtherTotalSpec')
  OtherTotalSpecProp get otherTotalSpec;

  /// If set to true, all dimension values are shown.
  /// Original name: qShowAll
  @nullable
  @BuiltValueField(wireName: 'qShowAll')
  bool get showAll;

  /// This property is used when some dimension limits are set.
  /// Label of the _Others_ group. The default label is _Others_ .
  /// Example:
  /// _"qOtherLabel":"= &lt;label&gt;"_
  /// or
  /// _"qOtherLabel":{"qExpr":"= &lt;label&gt;"}_
  /// Where:
  /// * &lt; _label_ &gt; is the label of the _Others_ group.
  /// Original name: qOtherLabel
  @nullable
  @BuiltValueField(wireName: 'qOtherLabel')
  StringExpr get otherLabel;

  /// If this property is set, the total of the calculated values is returned.
  /// The default label is _Total_ .
  /// Example:
  /// _"qTotalLabel":"= &lt;label&gt;"_
  /// or
  /// _"qTotalLabel":{"qExpr":"= &lt;label&gt;"}_
  /// Where:
  /// * &lt; _label_ &gt; is the label of the _Total_ group.
  /// Original name: qTotalLabel
  @nullable
  @BuiltValueField(wireName: 'qTotalLabel')
  StringExpr get totalLabel;

  /// Specifies a calculation condition object.
  /// If CalcCondition.Cond is not fulfilled, the dimension is excluded from the calculation and CalcCondition.Msg is evaluated.
  /// By default, there is no calculation condition.
  /// This property is optional.
  /// Original name: qCalcCondition
  @nullable
  @BuiltValueField(wireName: 'qCalcCondition')
  NxCalcCond get calcCondition;

  /// List of attribute expressions.
  /// Original name: qAttributeExpressions
  @nullable
  @BuiltValueField(wireName: 'qAttributeExpressions')
  BuiltList<NxCell> get attributeExpressions;

  /// List of attribute dimensions.
  /// Original name: qAttributeDimensions
  @nullable
  @BuiltValueField(wireName: 'qAttributeDimensions')
  BuiltList<NxCell> get attributeDimensions;

  factory NxTreeDimensionDef([updates(NxTreeDimensionDefBuilder b)]) =
      _$NxTreeDimensionDef;

  factory NxTreeDimensionDef.init(
      {String libraryId,
      NxInlineDimensionDef def,
      BuiltList<NxCell> valueExprs,
      bool nullSuppression,
      OtherTotalSpecProp otherTotalSpec,
      bool showAll,
      StringExpr otherLabel,
      StringExpr totalLabel,
      NxCalcCond calcCondition,
      BuiltList<NxCell> attributeExpressions,
      BuiltList<NxCell> attributeDimensions}) = _$NxTreeDimensionDef._;

  NxTreeDimensionDef._();
}
