/// This file was autogenerated

library nx_selection_cell;

import 'package:built_value/serializer.dart';
import 'package:built_value/built_value.dart';
part 'nx_selection_cell.g.dart';

abstract class NxSelectionCell
    implements Built<NxSelectionCell, NxSelectionCellBuilder> {
  static Serializer<NxSelectionCell> get serializer =>
      _$nxSelectionCellSerializer;

  /// Type of cells to select.
  ///
  /// One of:
  /// * D or NX_CELL_DATA
  /// * T or NX_CELL_TOP
  /// * L or NX_CELL_LEFT
  /// Original name: qType
  @nullable
  @BuiltValueField(wireName: 'qType')
  String get type;

  /// Column index to select.
  /// Indexing starts from 0.
  /// If the cell's type is:
  /// * D, the index is based on the data matrix.
  /// * T, the index is based on the data matrix.
  /// * L, the index is based on the left dimensions indexes.
  /// Original name: qCol
  @nullable
  @BuiltValueField(wireName: 'qCol')
  int get col;

  /// Row index to select.
  /// Indexing starts from 0.
  /// If the cell's type is:
  /// * D, the index is based on the data matrix.
  /// * T, the index is based on the top dimensions indexes.
  /// * L, the index is based on the data matrix.
  /// Original name: qRow
  @nullable
  @BuiltValueField(wireName: 'qRow')
  int get row;

  factory NxSelectionCell([updates(NxSelectionCellBuilder b)]) =
      _$NxSelectionCell;

  factory NxSelectionCell.init({String type, int col, int row}) =
      _$NxSelectionCell._;

  NxSelectionCell._();
}
