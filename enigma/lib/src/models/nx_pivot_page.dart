/// This file was autogenerated

library nx_pivot_page;

import 'package:built_value/serializer.dart';
import 'package:built_value/built_value.dart';
import 'nx_pivot_dimension_cell.dart';
import 'package:built_collection/built_collection.dart';
import 'nx_pivot_value_point.dart';
import 'rect.dart';
part 'nx_pivot_page.g.dart';

abstract class NxPivotPage implements Built<NxPivotPage, NxPivotPageBuilder> {
  static Serializer<NxPivotPage> get serializer => _$nxPivotPageSerializer;

  /// Information about the left dimension values of a pivot table.
  /// Original name: qLeft
  @nullable
  @BuiltValueField(wireName: 'qLeft')
  BuiltList<NxPivotDimensionCell> get left;

  /// Information about the top dimension values of a pivot table. If there is no top dimension in the pivot table, information about the measures are given.
  /// Original name: qTop
  @nullable
  @BuiltValueField(wireName: 'qTop')
  BuiltList<NxPivotDimensionCell> get top;

  /// Array of data.
  /// Original name: qData
  @nullable
  @BuiltValueField(wireName: 'qData')
  BuiltList<BuiltList<NxPivotValuePoint>> get data;

  /// Size and offset of the data in the matrix.
  /// Original name: qArea
  @nullable
  @BuiltValueField(wireName: 'qArea')
  Rect get area;

  factory NxPivotPage([updates(NxPivotPageBuilder b)]) = _$NxPivotPage;

  factory NxPivotPage.init(
      {BuiltList<NxPivotDimensionCell> left,
      BuiltList<NxPivotDimensionCell> top,
      BuiltList<BuiltList<NxPivotValuePoint>> data,
      Rect area}) = _$NxPivotPage._;

  NxPivotPage._();
}
