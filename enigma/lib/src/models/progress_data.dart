/// This file was autogenerated

library progress_data;

import 'package:built_value/serializer.dart';
import 'package:built_value/built_value.dart';
import 'error_data.dart';
import 'package:built_collection/built_collection.dart';
import 'progress_message.dart';
part 'progress_data.g.dart';

abstract class ProgressData
    implements Built<ProgressData, ProgressDataBuilder> {
  static Serializer<ProgressData> get serializer => _$progressDataSerializer;

  /// True if the request is started.
  /// Original name: qStarted
  @nullable
  @BuiltValueField(wireName: 'qStarted')
  bool get started;

  /// True if the request is finished.
  /// Original name: qFinished
  @nullable
  @BuiltValueField(wireName: 'qFinished')
  bool get finished;

  /// This property is not used.
  /// Original name: qCompleted
  @nullable
  @BuiltValueField(wireName: 'qCompleted')
  int get completed;

  /// This property is not used.
  /// Original name: qTotal
  @nullable
  @BuiltValueField(wireName: 'qTotal')
  int get total;

  /// This property is not used.
  /// Original name: qKB
  @nullable
  @BuiltValueField(wireName: 'qKB')
  int get kB;

  /// Request duration in milliseconds.
  /// Original name: qMillisecs
  @nullable
  @BuiltValueField(wireName: 'qMillisecs')
  int get millisecs;

  /// True when the engine pauses the script execution and waits for a user interaction.
  /// Original name: qUserInteractionWanted
  @nullable
  @BuiltValueField(wireName: 'qUserInteractionWanted')
  bool get userInteractionWanted;

  /// A progress message is persistent when it informs about the start or end of a statement. For example, it can inform about the total number of lines fetched from a data source or tell that the app was saved. All persistent progress messages between two *GetProgress* calls are summarized in this string. Contrarily to *qPersistentProgressMessages*, the content of the localized message string is displayed (not its message code).
  /// Original name: qPersistentProgress
  @nullable
  @BuiltValueField(wireName: 'qPersistentProgress')
  String get persistentProgress;

  /// A progress message is transient when it informs about the progress of an ongoing statement. For example, it can tell how many lines are currently fetched from a data source. All transient progress messages between two *GetProgress* calls are summarized in this string. Contrarily to *qTransientProgressMessage*, the content of the localized message string is displayed (not its message code).
  /// Original name: qTransientProgress
  @nullable
  @BuiltValueField(wireName: 'qTransientProgress')
  String get transientProgress;

  /// Information about the error messages that occur during the script execution.
  /// Original name: qErrorData
  @nullable
  @BuiltValueField(wireName: 'qErrorData')
  BuiltList<ErrorData> get errorData;

  /// List of persistent progress messages.
  /// Original name: qPersistentProgressMessages
  @nullable
  @BuiltValueField(wireName: 'qPersistentProgressMessages')
  BuiltList<ProgressMessage> get persistentProgressMessages;

  /// Transient progress message.
  /// Original name: qTransientProgressMessage
  @nullable
  @BuiltValueField(wireName: 'qTransientProgressMessage')
  ProgressMessage get transientProgressMessage;

  factory ProgressData([updates(ProgressDataBuilder b)]) = _$ProgressData;

  factory ProgressData.init(
      {bool started,
      bool finished,
      int completed,
      int total,
      int kB,
      int millisecs,
      bool userInteractionWanted,
      String persistentProgress,
      String transientProgress,
      BuiltList<ErrorData> errorData,
      BuiltList<ProgressMessage> persistentProgressMessages,
      ProgressMessage transientProgressMessage}) = _$ProgressData._;

  ProgressData._();
}
