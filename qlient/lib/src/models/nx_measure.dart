/// This file was autogenerated

library nx_measure;

import 'package:built_value/serializer.dart';
import 'package:built_value/built_value.dart';
import 'nx_inline_measure_def.dart';
import 'sort_criteria.dart';
import 'nx_cell.dart';
import 'package:built_collection/built_collection.dart';
import 'value_expr.dart';
import 'nx_calc_cond.dart';
part 'nx_measure.g.dart';

/// <div class=note>Either **qDef** or **qLibraryId** must be set, but not both. </div> <div class=note>If the measure is set in the hypercube and not in the library, this measure cannot be shared with other objects.</div> <div class=note>A measure that is set in the library can be used by many objects.</div> <div class=note>
/// expressions are complementary expressions associated to a measure. For example, you can decide to change the background color of a visualization depending on the values of the measure.
/// Attribute expressions do not affect the layout of an object. The sorting order is unchanged.
/// </div>
abstract class NxMeasure implements Built<NxMeasure, NxMeasureBuilder> {

 static Serializer<NxMeasure> get serializer => _$nxMeasureSerializer;

  /// Refers to a measure stored in the library.
  /// Original name: qLibraryId
  @nullable
  String get libraryId;

  /// Refers to a measure stored in the hypercube.
  /// Original name: qDef
  @nullable
  NxInlineMeasureDef get def;

  /// Defines the sort criteria.
  /// The default value is sort by ascending alphabetic order.
  /// This property is optional.
  /// Original name: qSortBy
  @nullable
  SortCriteria get sortBy;

  /// List of attribute expressions.
  /// Original name: qAttributeExpressions
  @nullable
  BuiltList<NxCell> get attributeExpressions;

  /// List of attribute dimensions.
  /// Original name: qAttributeDimensions
  @nullable
  BuiltList<NxCell> get attributeDimensions;

  /// Specifies a calculation condition, which must be fulfilled for the measure to be calculated.
  /// If the calculation condition is not met, the measure is excluded from the calculation.
  /// By default, there is no calculation condition.
  /// This property is optional.
  /// Original name: qCalcCond
  @nullable
  ValueExpr get calcCond;

  /// Specifies a calculation condition object.
  /// If CalcCondition.Cond is not fulfilled, the measure is excluded from the calculation and CalcCondition.Msg is evaluated.
  /// By default, there is no calculation condition.
  /// This property is optional.
  /// Original name: qCalcCondition
  @nullable
  NxCalcCond get calcCondition;

  factory NxMeasure([updates(NxMeasureBuilder b)]) = _$NxMeasure;

  factory NxMeasure.init({String libraryId, NxInlineMeasureDef def, SortCriteria sortBy, BuiltList<NxCell> attributeExpressions, BuiltList<NxCell> attributeDimensions, ValueExpr calcCond, NxCalcCond calcCondition}) = _$NxMeasure._;

  NxMeasure._();
}
