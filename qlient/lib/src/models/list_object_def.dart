/// This code was autogenerated
import 'package:built_value/built_value.dart';
import 'nx_inline_dimension_def.dart';
import 'nx_auto_sort_by_state_def.dart';
import 'nx_cell.dart';

/// Defines the properties of a list object.
/// For more information about the definition of a list object, see _Generic object_.
class ListObjectDef {
  /// Name of the alternate state.
  /// Default is current selections _$_ .
  /// Original name: qStateName
  String stateName;
  /// Refers to a dimension stored in the library.
  /// Original name: qLibraryId
  String libraryId;
  /// Refers to a dimension stored in the list object.
  /// Original name: qDef
  NxInlineDimensionDef def;
  /// Defines the sorting by state.
  /// Original name: qAutoSortByState
  NxAutoSortByStateDef autoSortByState;
  /// Defines the frequency mode. The frequency mode is used to calculate the frequency of a value in a list object.
  /// Default is _NX_FREQUENCY_NONE_ .
  /// This parameter is optional.
  /// 
  /// One of:
  /// * N or NX_FREQUENCY_NONE
  /// * V or NX_FREQUENCY_VALUE
  /// * P or NX_FREQUENCY_PERCENT
  /// * R or NX_FREQUENCY_RELATIVE
  /// Original name: qFrequencyMode
  String frequencyMode;
  /// If set to true, alternative values are allowed in _qData_ .
  /// If set to false, no alternative values are displayed in _qData_ . Values are excluded instead.
  /// The default value is false.
  /// Note that on the contrary, the _qStateCounts_ parameter counts the excluded values as alternative values.
  /// This parameter is optional.
  /// Original name: qShowAlternatives
  bool showAlternatives;
  /// Fetches an initial data set.
  /// Original name: qInitialDataFetch
  List<NxCell> initialDataFetch;
  /// Lists the expressions in the list object.
  /// This parameter is optional.
  /// Original name: qExpressions
  List<NxCell> expressions;
}

