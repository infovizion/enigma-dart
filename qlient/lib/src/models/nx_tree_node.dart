/// This file was autogenerated

library nx_tree_node;

import 'package:built_value/serializer.dart';
import 'package:built_value/built_value.dart';
import 'nx_cell.dart';
import 'package:built_collection/built_collection.dart';
import 'nx_attribute_expression_values.dart';
import 'nx_attribute_dim_values.dart';
part 'nx_tree_node.g.dart';

/// Represents a dimension in the tree.
abstract class NxTreeNode implements Built<NxTreeNode, NxTreeNodeBuilder> {

 static Serializer<NxTreeNode> get serializer => _$nxTreeNodeSerializer;

  /// The text version of the value, if available.
  /// Original name: qText
  @nullable
  String get text;

  /// Element number.
  /// Original name: qElemNo
  @nullable
  int get elemNo;

  /// A generated number applicable to this page only. Used so that children can easily identify who their parents are.
  /// Original name: qNodeNr
  @nullable
  int get nodeNr;

  /// The qNodeNr of this node's parent for the current page.
  /// Original name: qParentNode
  @nullable
  int get parentNode;

  /// Row index in the data matrix.
  /// The indexing starts from 0.
  /// Original name: qRow
  @nullable
  int get row;

  /// Type of the cell.
  /// 
  /// One of:
  /// * V or NX_DIM_CELL_VALUE
  /// * E or NX_DIM_CELL_EMPTY
  /// * N or NX_DIM_CELL_NORMAL
  /// * T or NX_DIM_CELL_TOTAL
  /// * O or NX_DIM_CELL_OTHER
  /// * A or NX_DIM_CELL_AGGR
  /// * P or NX_DIM_CELL_PSEUDO
  /// * R or NX_DIM_CELL_ROOT
  /// * U or NX_DIM_CELL_NULL
  /// * G or NX_DIM_CELL_GENERATED
  /// Original name: qType
  @nullable
  String get type;

  /// The measures for this node.
  /// Original name: qValues
  @nullable
  BuiltList<NxCell> get values;

  /// The children of this node in the tree structure.
  /// Original name: qNodes
  @nullable
  BuiltList<NxCell> get nodes;

  /// Attribute expression values.
  /// Original name: qAttrExps
  @nullable
  NxAttributeExpressionValues get attrExps;

  /// Attribute dimension values.
  /// Original name: qAttrDims
  @nullable
  NxAttributeDimValues get attrDims;

  factory NxTreeNode([updates(NxTreeNodeBuilder b)]) = _$NxTreeNode;

  NxTreeNode._();
}
