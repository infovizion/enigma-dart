/// This file was autogenerated

library field_attributes;

import 'package:built_value/serializer.dart';
import 'package:built_value/built_value.dart';
part 'field_attributes.g.dart';

/// IMPORTANT: WHENEVER YOU DO A CHANGE IN THIS TOPIC, DO THE EQUIVALENT CHANGE IN THE FieldAttributes SNIPPET AS WELL!
/// Sets the formatting of a field.
/// The properties of _qFieldAttributes_ and the formatting mechanism are described below.
///
/// ### Formatting mechanism
/// The formatting mechanism depends on the type set in _qType,_ as shown below:
/// <div class=note>In case of inconsistencies between the type and the format pattern, the format pattern takes precedence over the type.</div>
///
/// ### Type is DATE, TIME, TIMESTAMP or INTERVAL
/// The following applies:
/// * If a format pattern is defined in _qFmt_ , the formatting is as defined in _qFmt_ .
/// * If _qFmt_ is empty, the formatting is defined by the number interpretation variables included at the top of the script ( _TimeFormat_ , _DateFormat_ , _TimeStampFormat_ ).
/// * The properties _qDec_ , _qThou_ , _qnDec_ , _qUseThou_ are not used.
///
/// ### Type is INTEGER
/// The following applies:
/// * If a format pattern is defined in _qFmt_ , the engine looks at the values set in _qDec_ and _qThou_ . If these properties are not defined, the formatting mechanism uses the number interpretation variables included at the top of the script ( _DecimalSep_ and _ThousandSep_ ).
/// * If no format pattern is defined in _qFmt_ , no formatting is applied. The properties _qDec_ , _qThou_ , _qnDec_ , _qUseThou_ and the number interpretation variables defined in the script are not used .
///
/// ### Type is REAL
/// The following applies:
/// * If a format pattern is defined in _qFmt_ , the engine looks at the values set in _qDec_ and _qThou_ . If these properties are not defined, the engine uses the number interpretation variables included at the top of the script ( _DecimalSep_ and _ThousandSep_ ).
/// * If no format pattern is defined in _qFmt_ , and if the value is almost an integer value (for example, 14,000012), the value is formatted as an integer. The properties _qDec_ , _qThou_ , _qnDec_ , _qUseThou_ are not used.
/// * If no format pattern is defined in _qFmt_ , and if _qnDec_ is defined and not 0, the property _qDec_ is used. If _qDec_ is not defined, the variable _DecimalSep_ defined at the top of the script is used.
/// * If no format pattern is defined in _qFmt_ , and if _qnDec_ is 0, the number of decimals is 14 and the property _qDec_ is used. If _qDec_ is not defined, the variable _DecimalSep_ defined at the top of the script is used.
///
/// ### Type is FIX
/// The following applies:
/// * If a format pattern is defined in _qFmt_ , the engine looks at the values set in _qDec_ and _qThou_ . If these properties are not defined, the engine uses the number interpretation variables included at the top of the script ( _DecimalSep_ and _ThousandSep_ ).
/// * If no format pattern is defined in _qFmt_ , the properties _qDec_ and _qnDec_ are used. If _qDec_ is not defined, the variable _DecimalSep_ defined at the top of the script is used.
///
/// ### Type is MONEY
/// The following applies:
/// * If a format pattern is defined in _qFmt_ , the engine looks at the values set in _qDec_ and _qThou_ . If these properties are not defined, the engine uses the number interpretation variables included at the top of any script ( _MoneyDecimalSep_ and _MoneyThousandSep_ ).
/// * If no format pattern is defined in _qFmt_ , the engine uses the number interpretation variables included at the top of the script ( _MoneyDecimalSep_ and _MoneyThousandSep_ ).
///
/// ### Type is ASCII
/// No formatting, _qFmt_ is ignored.
abstract class FieldAttributes
    implements Built<FieldAttributes, FieldAttributesBuilder> {
  static Serializer<FieldAttributes> get serializer =>
      _$fieldAttributesSerializer;

  /// Type of the field.
  /// Default is U.
  ///
  /// One of:
  /// * U or UNKNOWN
  /// * A or ASCII
  /// * I or INTEGER
  /// * R or REAL
  /// * F or FIX
  /// * M or MONEY
  /// * D or DATE
  /// * T or TIME
  /// * TS or TIMESTAMP
  /// * IV or INTERVAL
  /// Original name: qType
  @nullable
  String get type;

  /// Number of decimals.
  /// Default is 10.
  /// Original name: qnDec
  @nullable
  int get nDec;

  /// Defines whether or not a thousands separator must be used.
  /// Default is 0.
  /// Original name: qUseThou
  @nullable
  int get useThou;

  /// Defines the format pattern that applies to _qText_ .
  /// Is used in connection to the type of the field (parameter **qType** ).
  /// For more information, see _Formatting mechanism_.
  /// Example: _YYYY-MM-DD_ for a date.
  /// Original name: qFmt
  @nullable
  String get fmt;

  /// Defines the decimal separator.
  /// Example: **.**
  /// Original name: qDec
  @nullable
  String get dec;

  /// Defines the thousand separator (if any).
  /// Is used if **qUseThou** is set to 1.
  /// Example: **,**
  /// Original name: qThou
  @nullable
  String get thou;

  factory FieldAttributes([updates(FieldAttributesBuilder b)]) =
      _$FieldAttributes;

  factory FieldAttributes.init(
      {String type,
      int nDec,
      int useThou,
      String fmt,
      String dec,
      String thou}) = _$FieldAttributes._;

  FieldAttributes._();
}
