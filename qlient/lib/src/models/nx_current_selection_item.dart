/// This file was autogenerated

library nx_current_selection_item;

import 'package:built_value/serializer.dart';
import 'package:built_value/built_value.dart';
import 'nx_cell.dart';
import 'package:built_collection/built_collection.dart';
import 'nx_state_counts.dart';
part 'nx_current_selection_item.g.dart';

abstract class NxCurrentSelectionItem implements Built<NxCurrentSelectionItem, NxCurrentSelectionItemBuilder> {

 static Serializer<NxCurrentSelectionItem> get serializer => _$nxCurrentSelectionItemSerializer;

  /// Number of values in the field.
  /// Original name: qTotal
  @nullable
  int get total;

  /// This parameter is displayed if its value is true.
  /// Is set to true if the field is a numeric.
  /// This parameter is optional.
  /// Original name: qIsNum
  @nullable
  bool get isNum;

  /// Name of the field that is selected.
  /// Original name: qField
  @nullable
  String get field;

  /// This parameter is displayed if its value is true.
  /// Is set to true if the field is locked.
  /// This parameter is optional.
  /// Original name: qLocked
  @nullable
  bool get locked;

  /// This parameter is displayed if its value is true.
  /// Property that is set to a field. Is set to true if the field cannot be unselected.
  /// This parameter is optional.
  /// Original name: qOneAndOnlyOne
  @nullable
  bool get oneAndOnlyOne;

  /// Text that was used for the search. This parameter is filled when searching for a value and selecting it.
  /// This parameter is optional.
  /// Original name: qTextSearch
  @nullable
  String get textSearch;

  /// Number of values that are selected.
  /// Original name: qSelectedCount
  @nullable
  int get selectedCount;

  /// Values that are selected.
  /// Original name: qSelected
  @nullable
  String get selected;

  /// Information about the range of selected values.
  /// Is empty if there is no range of selected values.
  /// Original name: qRangeInfo
  @nullable
  List<NxCell> get rangeInfo;

  /// Sort index of the field. Indexing starts from 0.
  /// Original name: qSortIndex
  @nullable
  int get sortIndex;

  /// Number of values in a particular state.
  /// Original name: qStateCounts
  @nullable
  NxStateCounts get stateCounts;

  /// Information about the fields that are selected.
  /// Original name: qSelectedFieldSelectionInfo
  @nullable
  List<NxCell> get selectedFieldSelectionInfo;

  /// Information about the fields that are not selected.
  /// Original name: qNotSelectedFieldSelectionInfo
  @nullable
  List<NxCell> get notSelectedFieldSelectionInfo;

  /// Maximum values to show in the current selections.
  /// The default value is 6.
  /// Original name: qSelectionThreshold
  @nullable
  int get selectionThreshold;

  /// Label that, if defined, is displayed in current selections instead of the actual expression.
  /// Original name: qReadableName
  @nullable
  String get readableName;

  /// Optional parameter. Indicates if the selection is to be hidden in the Selections bar.
  /// Is set to true if the current selection is hidden.
  /// Original name: qIsHidden
  @nullable
  bool get isHidden;

  factory NxCurrentSelectionItem([updates(NxCurrentSelectionItemBuilder b)]) = _$NxCurrentSelectionItem;

  NxCurrentSelectionItem._();
}
